/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProgressRouteImport } from './routes/progress'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ComponentsTooltipRouteImport } from './routes/components/tooltip'
import { Route as ComponentsTabsRouteImport } from './routes/components/tabs'
import { Route as ComponentsSpinnerRouteImport } from './routes/components/spinner'
import { Route as ComponentsRadioRouteImport } from './routes/components/radio'
import { Route as ComponentsProgressRouteImport } from './routes/components/progress'
import { Route as ComponentsPaginationRouteImport } from './routes/components/pagination'
import { Route as ComponentsDialogRouteImport } from './routes/components/dialog'
import { Route as ComponentsCheckboxRouteImport } from './routes/components/checkbox'
import { Route as ComponentsCarouselRouteImport } from './routes/components/carousel'
import { Route as ComponentsCardRouteImport } from './routes/components/card'
import { Route as ComponentsButtonRouteImport } from './routes/components/button'
import { Route as ComponentsAlertRouteImport } from './routes/components/alert'
import { Route as ComponentsAccordionRouteImport } from './routes/components/accordion'

const ProgressRoute = ProgressRouteImport.update({
  id: '/progress',
  path: '/progress',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsTooltipRoute = ComponentsTooltipRouteImport.update({
  id: '/components/tooltip',
  path: '/components/tooltip',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsTabsRoute = ComponentsTabsRouteImport.update({
  id: '/components/tabs',
  path: '/components/tabs',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsSpinnerRoute = ComponentsSpinnerRouteImport.update({
  id: '/components/spinner',
  path: '/components/spinner',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsRadioRoute = ComponentsRadioRouteImport.update({
  id: '/components/radio',
  path: '/components/radio',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsProgressRoute = ComponentsProgressRouteImport.update({
  id: '/components/progress',
  path: '/components/progress',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsPaginationRoute = ComponentsPaginationRouteImport.update({
  id: '/components/pagination',
  path: '/components/pagination',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsDialogRoute = ComponentsDialogRouteImport.update({
  id: '/components/dialog',
  path: '/components/dialog',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsCheckboxRoute = ComponentsCheckboxRouteImport.update({
  id: '/components/checkbox',
  path: '/components/checkbox',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsCarouselRoute = ComponentsCarouselRouteImport.update({
  id: '/components/carousel',
  path: '/components/carousel',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsCardRoute = ComponentsCardRouteImport.update({
  id: '/components/card',
  path: '/components/card',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsButtonRoute = ComponentsButtonRouteImport.update({
  id: '/components/button',
  path: '/components/button',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsAlertRoute = ComponentsAlertRouteImport.update({
  id: '/components/alert',
  path: '/components/alert',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsAccordionRoute = ComponentsAccordionRouteImport.update({
  id: '/components/accordion',
  path: '/components/accordion',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/progress': typeof ProgressRoute
  '/components/accordion': typeof ComponentsAccordionRoute
  '/components/alert': typeof ComponentsAlertRoute
  '/components/button': typeof ComponentsButtonRoute
  '/components/card': typeof ComponentsCardRoute
  '/components/carousel': typeof ComponentsCarouselRoute
  '/components/checkbox': typeof ComponentsCheckboxRoute
  '/components/dialog': typeof ComponentsDialogRoute
  '/components/pagination': typeof ComponentsPaginationRoute
  '/components/progress': typeof ComponentsProgressRoute
  '/components/radio': typeof ComponentsRadioRoute
  '/components/spinner': typeof ComponentsSpinnerRoute
  '/components/tabs': typeof ComponentsTabsRoute
  '/components/tooltip': typeof ComponentsTooltipRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/progress': typeof ProgressRoute
  '/components/accordion': typeof ComponentsAccordionRoute
  '/components/alert': typeof ComponentsAlertRoute
  '/components/button': typeof ComponentsButtonRoute
  '/components/card': typeof ComponentsCardRoute
  '/components/carousel': typeof ComponentsCarouselRoute
  '/components/checkbox': typeof ComponentsCheckboxRoute
  '/components/dialog': typeof ComponentsDialogRoute
  '/components/pagination': typeof ComponentsPaginationRoute
  '/components/progress': typeof ComponentsProgressRoute
  '/components/radio': typeof ComponentsRadioRoute
  '/components/spinner': typeof ComponentsSpinnerRoute
  '/components/tabs': typeof ComponentsTabsRoute
  '/components/tooltip': typeof ComponentsTooltipRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/progress': typeof ProgressRoute
  '/components/accordion': typeof ComponentsAccordionRoute
  '/components/alert': typeof ComponentsAlertRoute
  '/components/button': typeof ComponentsButtonRoute
  '/components/card': typeof ComponentsCardRoute
  '/components/carousel': typeof ComponentsCarouselRoute
  '/components/checkbox': typeof ComponentsCheckboxRoute
  '/components/dialog': typeof ComponentsDialogRoute
  '/components/pagination': typeof ComponentsPaginationRoute
  '/components/progress': typeof ComponentsProgressRoute
  '/components/radio': typeof ComponentsRadioRoute
  '/components/spinner': typeof ComponentsSpinnerRoute
  '/components/tabs': typeof ComponentsTabsRoute
  '/components/tooltip': typeof ComponentsTooltipRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/progress'
    | '/components/accordion'
    | '/components/alert'
    | '/components/button'
    | '/components/card'
    | '/components/carousel'
    | '/components/checkbox'
    | '/components/dialog'
    | '/components/pagination'
    | '/components/progress'
    | '/components/radio'
    | '/components/spinner'
    | '/components/tabs'
    | '/components/tooltip'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/progress'
    | '/components/accordion'
    | '/components/alert'
    | '/components/button'
    | '/components/card'
    | '/components/carousel'
    | '/components/checkbox'
    | '/components/dialog'
    | '/components/pagination'
    | '/components/progress'
    | '/components/radio'
    | '/components/spinner'
    | '/components/tabs'
    | '/components/tooltip'
  id:
    | '__root__'
    | '/'
    | '/progress'
    | '/components/accordion'
    | '/components/alert'
    | '/components/button'
    | '/components/card'
    | '/components/carousel'
    | '/components/checkbox'
    | '/components/dialog'
    | '/components/pagination'
    | '/components/progress'
    | '/components/radio'
    | '/components/spinner'
    | '/components/tabs'
    | '/components/tooltip'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProgressRoute: typeof ProgressRoute
  ComponentsAccordionRoute: typeof ComponentsAccordionRoute
  ComponentsAlertRoute: typeof ComponentsAlertRoute
  ComponentsButtonRoute: typeof ComponentsButtonRoute
  ComponentsCardRoute: typeof ComponentsCardRoute
  ComponentsCarouselRoute: typeof ComponentsCarouselRoute
  ComponentsCheckboxRoute: typeof ComponentsCheckboxRoute
  ComponentsDialogRoute: typeof ComponentsDialogRoute
  ComponentsPaginationRoute: typeof ComponentsPaginationRoute
  ComponentsProgressRoute: typeof ComponentsProgressRoute
  ComponentsRadioRoute: typeof ComponentsRadioRoute
  ComponentsSpinnerRoute: typeof ComponentsSpinnerRoute
  ComponentsTabsRoute: typeof ComponentsTabsRoute
  ComponentsTooltipRoute: typeof ComponentsTooltipRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/progress': {
      id: '/progress'
      path: '/progress'
      fullPath: '/progress'
      preLoaderRoute: typeof ProgressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/tooltip': {
      id: '/components/tooltip'
      path: '/components/tooltip'
      fullPath: '/components/tooltip'
      preLoaderRoute: typeof ComponentsTooltipRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/tabs': {
      id: '/components/tabs'
      path: '/components/tabs'
      fullPath: '/components/tabs'
      preLoaderRoute: typeof ComponentsTabsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/spinner': {
      id: '/components/spinner'
      path: '/components/spinner'
      fullPath: '/components/spinner'
      preLoaderRoute: typeof ComponentsSpinnerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/radio': {
      id: '/components/radio'
      path: '/components/radio'
      fullPath: '/components/radio'
      preLoaderRoute: typeof ComponentsRadioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/progress': {
      id: '/components/progress'
      path: '/components/progress'
      fullPath: '/components/progress'
      preLoaderRoute: typeof ComponentsProgressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/pagination': {
      id: '/components/pagination'
      path: '/components/pagination'
      fullPath: '/components/pagination'
      preLoaderRoute: typeof ComponentsPaginationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/dialog': {
      id: '/components/dialog'
      path: '/components/dialog'
      fullPath: '/components/dialog'
      preLoaderRoute: typeof ComponentsDialogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/checkbox': {
      id: '/components/checkbox'
      path: '/components/checkbox'
      fullPath: '/components/checkbox'
      preLoaderRoute: typeof ComponentsCheckboxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/carousel': {
      id: '/components/carousel'
      path: '/components/carousel'
      fullPath: '/components/carousel'
      preLoaderRoute: typeof ComponentsCarouselRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/card': {
      id: '/components/card'
      path: '/components/card'
      fullPath: '/components/card'
      preLoaderRoute: typeof ComponentsCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/button': {
      id: '/components/button'
      path: '/components/button'
      fullPath: '/components/button'
      preLoaderRoute: typeof ComponentsButtonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/alert': {
      id: '/components/alert'
      path: '/components/alert'
      fullPath: '/components/alert'
      preLoaderRoute: typeof ComponentsAlertRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/accordion': {
      id: '/components/accordion'
      path: '/components/accordion'
      fullPath: '/components/accordion'
      preLoaderRoute: typeof ComponentsAccordionRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProgressRoute: ProgressRoute,
  ComponentsAccordionRoute: ComponentsAccordionRoute,
  ComponentsAlertRoute: ComponentsAlertRoute,
  ComponentsButtonRoute: ComponentsButtonRoute,
  ComponentsCardRoute: ComponentsCardRoute,
  ComponentsCarouselRoute: ComponentsCarouselRoute,
  ComponentsCheckboxRoute: ComponentsCheckboxRoute,
  ComponentsDialogRoute: ComponentsDialogRoute,
  ComponentsPaginationRoute: ComponentsPaginationRoute,
  ComponentsProgressRoute: ComponentsProgressRoute,
  ComponentsRadioRoute: ComponentsRadioRoute,
  ComponentsSpinnerRoute: ComponentsSpinnerRoute,
  ComponentsTabsRoute: ComponentsTabsRoute,
  ComponentsTooltipRoute: ComponentsTooltipRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
